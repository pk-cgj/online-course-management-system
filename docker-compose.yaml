services:

  keycloak:
    build:
      context: .
      dockerfile: Dockerfile.keycloak
    container_name: keycloak
    ports:
      - "8888:8080"
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak_password
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_TRANSACTION_XA_ENABLED: "true"
      KC_TRANSACTION_JTA_ENABLED: "true"
      KC_TRANSACTION_XA_RECOVERY_NODES: "all"
      KC_TRANSACTION_RECOVERY_ENABLED: "true"
      KC_TRANSACTION_RECOVERY_DIR: /opt/keycloak/data/transaction-logs
      KC_FEATURES: scripts
    command:
      - start-dev
      - --import-realm
      - --http-enabled=true
      - --hostname-strict=false
      - --hostname-strict-https=false
    volumes:
      - ./migration/keycloak/course-realm.json:/opt/keycloak/data/import/course-realm.json:ro
      - keycloak_transaction_logs:/opt/keycloak/data/transaction-logs
    networks:
      - microservices-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/realms/course-realm/.well-known/openid-configuration" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    environment:
      POSTGRES_DB: test
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - ./migration/postgres/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - microservices-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "myuser", "-d", "test" ]
      interval: 30s
      timeout: 10s
      retries: 5

  online-course-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: online-course-app
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/coursedb
      SPRING_DATASOURCE_USERNAME: coursedb_user
      SPRING_DATASOURCE_PASSWORD: coursedb_password
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_ID: course-client
      SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_KEYCLOAK_CLIENT_SECRET: HMduSnGILBeRI56y0XxOfcVwIPhZ9O6u
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/course-realm
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: http://keycloak:8080/realms/course-realm/protocol/openid-connect/certs
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI: http://keycloak:8080/realms/course-realm
      SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_JWK_SET_URI: http://keycloak:8080/realms/course-realm/protocol/openid-connect/certs

    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - microservices-network

volumes:
  postgres_data:
  keycloak_transaction_logs:

networks:
  microservices-network:
    name: microservices-network
    driver: bridge
